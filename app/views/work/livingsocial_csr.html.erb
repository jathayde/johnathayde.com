<% set_meta_tags title: "Resume/CV",
                 og: {
                   title: "John Athayde | Resume/CV",
                 } %>

<% content_for :work_header do %>
  <section class="work-header" id="ls_head">
    <h1>
      <span>Case Study Â»</span>
      LivingSocial CSR System
    </h1>
  </section>
<% end %>

<section class="bluf">
  <h2 class="tinylabel"><b>01</b> BLUF</h2>
  [to be written]
</section>

<section class="team">
  <h2 class="tinylabel"><b>02</b> The Team</h2>
  <ul>
    <li><b>Ben Getson</b>: Product Management</li>
    <li><b>John Athayde</b>: UX, Visual Design, CSS</li>
    <li><b>Lynn Wallenstein</b>: HTML/CSS/Rails, UX</li>
    <li><b>Tom Copeland</b>: Engineering</li>
    <li><b>Dave Bock</b>: Engineering</li>
    <li><b>Pete Campbell</b>: Engineering</li>
  </ul>
</section>

<section class="long-form">
  <%= image_tag "work/livingsocial_csr/q_logo.png", alt: "Logo for Q app", id: "q_logo" %>
  <h2 class="tinylabel"><b>03</b> The Details</h2>
  <p>
    LivingSocial was a daily deals company that experienced exponential growth in the early 2010s. As with many fast-growing startups, customer service issues popped up due to elements of the product offering that were unknown or didn't scale as well as the team would have liked.
  </p>
  <p>
    By 2012, we experienced expectation mismatches between customers and merchants, issues where merchants did not always abide by the terms of the agreement, and some customers who abused the system.
  </p>
  <p>
    As a recently created internal tools team, helping customer support was one of our first tasks. Through interviews and shadowing of CSRs (Customer Support Representatives), we discovered a variety of issues:
  </p>

  <ul>
    <li>Low KPIs and SLAs: Agent average SLA was 20%,</li>
    <li>One in five calls hung up before a representative could even answer the phone,</li>
    <li>Consumer cases took a long time, and sometimes multiple calls, to close,</li>
    <li>CSRs entered all data into two systems: A Ruby on Rails CRUD interface to our admin area and Salesforce (case management).</li>
    <li>Due to that, CSRs spent more time documenting the call than the call itself.</li>
    <li>Many one-off issues required an engineer to make edits in the production database manually.</li>
    <li>Poor SOPs around rebates caused a lot of confusion about what a CSR could offer a customer on a call and led to uneven outcomes for similar issues.</li>
  </ul>

  <figure>
    <%= image_tag "work/livingsocial_csr/double-entry.jpg", loading: :lazy, alt: "LivingSocial CSR System before work began - double entry in both salesforce and admin areas" %>
    <figcaption>
      <p>
        The system at project inception. Double-entry in Salesforce and Admin areas. 
      </p>
    </figcaption>
  </figure>

  <p>
    CSRs would communicate through AIM, Salesforce Chatter, and in person, so many details about cases would not end up in the system of record, and this could lead to handoff issues if someone else picked up an open ticket.
  </p>
  <p>
    We used a Service Safari to discover issues in the platform. Almost every employee also was a customer, and we started collecting problems identified by employees whose deals didn't quite work out as expected.
  </p>
  <p>
    We began by interviewing managers and line support representatives and following up with extensive and regular shadowing of CSRs on both phone calls and email support cases. These developed into medium-weight personas for our primary groups in the support organization.
  </p>

  <p>
    We used the AT-ONE framework to analyze the overall service and look for improvements. AT-ONE stands for "Actors, Touchpoints, Offering, Need, and Experiences."
  </p>
  <p>
    A primary challenge was that we had to roll out the new interactions for a subset of CSRs while maintaining the old system. Engineering selected Salesforce as the database of record, and engineers had to write a library for the new Ruby/Backbone app to talk to it.
  </p>

  <p>
    We used hand sketching followed by high-fidelity comps to fix individual, minor problems in the existing interface while we worked towards a new holistic system. Some examples:
  </p>

    <figure>
    <%= image_tag "work/livingsocial_csr/port-ls-deal-page-new-blocks.jpg", loading: :lazy, alt: "Image showing various new elements in the old user interface of the Deals admin" %>
    <figcaption>
      <p>
        Elements such as subscription management, user overview, user creditcards, voucher detail, and more were all introduced into the old interface before the new product was complete. 
      </p>
    </figcaption>
  </figure>
  <figure>
    <%= image_tag "work/livingsocial_csr/refund-flow-in-admin.jpg", loading: :lazy, alt: "New refund flow in admin" %>
    <figcaption>
      <p>
        The new refund workflow in the old admin area. This was the first major "new look" block that really took over the page and hinted at the new "Q" app coming. 
      </p>
    </figcaption>
  </figure>

  <p>
    During this process, we identified several items that we brought to the Consumer design & engineering team and collaborated on those improvements:
  </p>

  <ul>
    <li>We improved the deal's fine print, shifting to bullet points for improved legibility and making phrasing more explicit.</li>
    <li>The consumer team redesigned the voucher itself to improve clarity for the purchaser.</li>
    <li>Consumer engineering built an entire self-service portal to fast-track typical support reasons and provide immediate resolution</li>
    <li>We changed microcopy in the global navigation from "My Account" to "My Vouchers"</li>
    <li>The Deal Quality & Programming team took feedback about various merchants and altered offerings to reduce customer frustration.</li>
  </ul>

  <figure>
    <%= image_tag "work/livingsocial_csr/csr_my_vouchers_tab.jpg", loading: :lazy, alt: "The new my vouchers tab" %>
    <figcaption>
      <p>
        The new "My Vouchers" tab change on the consumer side, in the original and redesigned interfaces (design & implementation by customer design/engineering teams).
      </p>
    </figcaption>
  </figure>

  <p>
    After launch, we  measured the following improvements:
  </p>

  <ul class="outcomes">
    <li>Agent SLA improved from 20% to 90%</li>
    <li>The call abandonment rate dropped from 20% to 4%</li>
    <li>We reduced the time for a CSR to complete a consumer case by 20%</li>
  </ul>

  <p>
    The design elements created for this became the backbone of the style guide/design system ("Wilde") that powered 30 different internal tools with a UX/Front-end team of four people I led as a player-coach.
  </p>
  <p>
    Here are the final screen designs:
  </p>

  <figure>
    <%= image_tag "work/livingsocial_csr/csr_final_dual.jpg", loading: :lazy, alt: "The dual screen setup most CSRs would use" %>
    <figcaption>
      <p>
        Teh dual screen setup most CSRs would be seeing during regular interactions.
      </p>
    </figcaption>
  </figure>
  <figure>
    <%= image_tag "work/livingsocial_csr/csr_final_left_0.jpg", loading: :lazy, alt: "New primary screen (left side)" %>
    <figcaption>
      <p>
        New primary screen (left monitor).
      </p>
    </figcaption>
  </figure>
  <figure>
    <%= image_tag "work/livingsocial_csr/csr_final_right_transactions.jpg", loading: :lazy, alt: "New primary screen (right side)" %>
    <figcaption>
      <p>
        New primary transactions view for a customer (right monitor).
      </p>
    </figcaption>
  </figure>
  <figure>
    <%= image_tag "work/livingsocial_csr/csr_final_right_creditcards.jpg", loading: :lazy, alt: "New credit card screen (right side)" %>
    <figcaption>
      <p>
        New credit card view for a customer (right monitor).
      </p>
    </figcaption>
  </figure>
  <figure>
    <%= image_tag "work/livingsocial_csr/csr_final_right_subscriptoins.jpg", loading: :lazy, alt: "New primary screen (right side)" %>
    <figcaption>
      <p>
        New subscriptions view for a customer (right monitor).
      </p>
    </figcaption>
  </figure>

</section>

<section class="tools-used">
  <h2 class="tinylabel"><b>04</b> Tools Used</h2>
    <ul class="tags">
    <li>Photoshop</li>
    <li>Illustrator</li>
    <li>Excel</li>
    <li>Trace/Pen</li>
    <li>Ruby on Rails</li>
    <li>HTML/SCSS</li>
  </ul>
</section>